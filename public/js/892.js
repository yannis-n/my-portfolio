"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[892],{9892:(t,e,r)=>{r.r(e),r.d(e,{default:()=>p});var n=r(7294),o=r(1968),i=r(5893);function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function u(t,e){return t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t}const p=function(t){var e=t.position[0],r=t.position[1],c=(t.position[2],u(0,20)),a=u(1,4),p=(0,n.useRef)(),f=0,l=.001;return(0,o.xQ)((function(t){t.clock;var n=t.camera;p.current.material.opacity<.7&&(p.current.material.opacity+=.002),n.position.z<0?(p.current.visible=!0,p.current.position.z-=l,(p.current.position.z>-50||p.current.position.z<-100)&&(l=-l)):p.current.visible=!1,n.position.z<p.current.position.z&&(p.current.position.z=n.position.z-400),f+=.001,p.current.position.x=e+c*Math.cos(a*f)+0,p.current.position.y=r+c*Math.sin(a*f)+0})),(0,i.jsxs)("mesh",s(s({},t),{},{visible:!0,castShadow:!0,ref:p,children:[(0,i.jsx)("sphereBufferGeometry",{args:[.1,30,30],attach:"geometry"}),(0,i.jsx)("meshBasicMaterial",{attach:"material",color:"#fff",transparent:!0,opacity:0,brightness:10})]}))}}}]);
//# sourceMappingURL=892.js.map