{"version":3,"file":"js/892.js","mappings":"00BAKA,SAASA,EAAaC,EAAKC,GAGvB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAuDxD,QApDD,SAAcM,GACV,IACIC,EACCD,EAAME,SAAS,GADhBD,EAECD,EAAME,SAAS,GAIjBC,GAHEH,EAAME,SAAS,GAGRT,EAAa,EAAE,KACxBW,EAAOX,EAAa,EAAE,GACnBY,GAAOC,EAAAA,EAAAA,UACTC,EAAI,EACJC,EAAS,KAqBb,OApBAC,EAAAA,EAAAA,KAAS,YAAuB,EAApBC,MAAoB,IAAbC,EAAa,EAAbA,OACfN,EAAKO,QAAQC,SAASC,QAAU,KAAMT,EAAKO,QAAQC,SAASC,SAAW,MAEvEH,EAAOT,SAASa,EAAI,GACpBV,EAAKO,QAAQI,SAAU,EACrBX,EAAKO,QAAQV,SAASa,GAAKP,GAC3BH,EAAKO,QAAQV,SAASa,GAAK,IAAMV,EAAKO,QAAQV,SAASa,GAAK,OAC9DP,GAAUA,IAGVH,EAAKO,QAAQI,SAAU,EAEvBL,EAAOT,SAASa,EAAIV,EAAKO,QAAQV,SAASa,IAC1CV,EAAKO,QAAQV,SAASa,EAAIJ,EAAOT,SAASa,EAAI,KAE9CR,GAAK,KACLF,EAAKO,QAAQV,SAASe,EAAIhB,EAAkBE,EAASP,KAAKsB,IAAId,EAAOG,GAAK,EAC1EF,EAAKO,QAAQV,SAASiB,EAAIlB,EAAkBE,EAASP,KAAKwB,IAAIhB,EAAOG,GAAK,MAI9E,wBACMP,GADN,IAEMgB,SAAO,EACRK,YAAU,EACVC,IAAKjB,EAJV,WAKO,iCAAsBkB,KAAM,CAAC,GAAK,GAAI,IAAKC,OAAO,cAElD,8BACIA,OAAO,WACPC,MA1CC,OA2CDC,aAAW,EACXZ,QAAS,EACTa,WAAY","sources":["webpack:///./resources/js/components/Star.js"],"sourcesContent":["\n\nimport React, { useRef, } from 'react';\nimport { useFrame } from 'react-three-fiber';\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  \nfunction Star(props) {\n    let color = \"#fff\"\n    let firstPosition = {\n     x : props.position[0],\n     y : props.position[1],\n     z : props.position[2],\n   }\n \n   let radius = getRandomInt(0,20)\n   let rate = getRandomInt(1,4)\n    const mesh = useRef();\n    var t = 0;\n    let zSpeed = 0.001\n    useFrame(({ clock, camera }) => {\n    if( mesh.current.material.opacity < 0.7 ) mesh.current.material.opacity += 0.002\n\n    if (camera.position.z < 0){\n        mesh.current.visible = true\n          mesh.current.position.z -= zSpeed \n      if (mesh.current.position.z > -50 || mesh.current.position.z < -100) {\n        zSpeed = -zSpeed\n    }\n    }else{\n        mesh.current.visible = false\n    }\n    if (camera.position.z < mesh.current.position.z){\n        mesh.current.position.z = camera.position.z - 400\n    }\n        t += 0.001;          \n        mesh.current.position.x = firstPosition.x + radius * Math.cos(rate * t) + 0;\n        mesh.current.position.y = firstPosition.y + radius * Math.sin(rate * t) + 0; // These to strin\n\n    })\n    return (\n    <mesh\n      {...props}\n          visible\n         castShadow\n         ref={mesh}>\n           <sphereBufferGeometry args={[0.1, 30, 30]} attach=\"geometry\" />\n            \n           <meshBasicMaterial\n               attach=\"material\"\n               color= {color}\n               transparent\n               opacity={0}\n               brightness={10}\n               />\n      </mesh>\n   );\n }\n\n export default Star;"],"names":["getRandomInt","min","max","Math","ceil","floor","random","props","firstPosition","position","radius","rate","mesh","useRef","t","zSpeed","useFrame","clock","camera","current","material","opacity","z","visible","x","cos","y","sin","castShadow","ref","args","attach","color","transparent","brightness"],"sourceRoot":""}